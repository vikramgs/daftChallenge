---
title: "DAFT Package Challenge"
subtitle: "Recreating the Scurvy DAGs with Beautiful Visualizations"
format:
  html: default
execute:
  echo: true
  eval: true
---

<!-- 
# 🎨 DAFT Package Challenge - Recreating the Scurvy DAGs

::: {.callout-important}
## 📊 Challenge Requirements In Section [Student Analysis Section](#student-analysis-section)
- Recreate all three scurvy DAGs using DAFT programming
- Optional: Demonstrate understanding of DAFT customization options
:::

## The Problem: Mastering Probabilistic Graphical Models with DAFT

**Core Question:** How can we use the DAFT package to create visually appealing Directed Acyclic Graphs (DAGs) that tell a compelling data story?

**The Challenge:** You'll recreate three historical DAGs depicting the fascinating story of how we lost and rediscovered the cure to scurvy. This challenge teaches you to use DAFT for creating professional-quality probabilistic graphical models.

**Our Approach:** We'll work through the three different understandings of the scurvy data generating process, learning DAFT customization techniques while exploring a crucial moment in medical history.

::: {.callout-warning}
## ⚠️ AI Partnership Required

This challenge pushes boundaries intentionally. You'll tackle problems that normally require weeks of study, but with Cursor AI as your partner (and your brain keeping it honest), you can accomplish more than you thought possible.

**The new reality:** The four stages of competence are Ignorance → Awareness → Learning → Mastery. AI lets us produce Mastery-level work while operating primarily in the Awareness stage. I focus on awareness training, you leverage AI for execution, and together we create outputs that used to require years of dedicated study.
:::

## The Scurvy Story: A Data Science Tragedy

Scurvy was a devastating disease that affected sailors on long voyages. The cure was discovered in 1747, but due to a misunderstanding about the cause, the cure was lost for over 150 years. The story involves three different understandings of the data generating process:

1. **1747 Understanding:** Lemons prevent scurvy (correct but incomplete!)
2. **Misguided Belief:** Acid kills bacteria that causes scurvy (wrong!)
3. **1928 Understanding:** Vitamin C prevents scurvy (the real mechanism)

## Environment Setup

First, let's install the DAFT package and set up our environment:
-->

```{python}
#| label: setup-environment
#| echo: false
#| message: false
#| warning: false

# Install DAFT package (run this in terminal if not already installed)
# pip install 'daft-pgm'

import daft
import matplotlib.pyplot as plt
import numpy as np

# Set up plotting parameters for better quality
plt.rcParams['figure.dpi'] = 150
plt.rcParams['savefig.dpi'] = 300

# print("DAFT package imported successfully!")
# print("Ready to create beautiful DAGs!")
```
<!--
::: {.callout-note}
## 💡 Understanding DAFT

 **DAFT (Directed Acyclic Factor Graphs Toolkit)** is a Python package for creating probabilistic graphical models. It's particularly useful for:

- Creating Directed Acyclic Graphs (DAGs)
- Visualizing causal relationships
- Communicating data generating processes
- Creating publication-quality figures

**Key DAFT Concepts:**

- **Nodes:** Represent variables or factors
- **Edges:** Show relationships between variables
- **Plates:** Indicate repeated structures
- **Styling:** Customize colors, shapes, and formatting
::: -->

## The Three DAGs: Your Mission

Your task is to recreate these three historical DAGs using DAFT, making them visually appealing and professionally formatted.

### DAG 1: The 1747 Understanding (Correct but Incomplete)

**Historical Context:** In 1747, James Lind discovered that lemons prevent scurvy through a controlled experiment. However, the understanding was incomplete - they knew lemons worked but not why.

**Your Task:** Recreate this DAG showing the relationship between lemons and scurvy prevention.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/642288ea5f79050c05801c3d127084ac0f361a01/images/scurvy2.png)

```{python}
#| label: dag-1-1747
#| echo: false



import daft
import matplotlib.pyplot as plt

# Create a PGM object
pgm = daft.PGM(dpi=150, alternate_style="outer")

# Example of a professionally styled node
pgm.add_node("Lemons", "Lemons\nIntake" + r" $(X)$", 1, 1, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'yellow', 
                 'edgecolor': '#ff8c00', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("Scruvy", "Scruvy\n"+r" $(Y)$", 4, 1, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'thistle', 
                 'edgecolor': 'purple', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_edge("Lemons", "Scruvy")

pgm.render()


```

::: {.callout-note}
## Analysis of DAG 1 (1747 Understanding)

This simple DAG captures James Lind's 1747 discovery that lemons prevent scurvy. The two-node structure (**Lemons** → **Scurvy**) is correct in its conclusion but incomplete in its mechanism. While Lind's experiments proved lemons were effective, the lack of understanding about *why* they worked led to the cure being lost for over 150 years when people mistakenly replaced lemons with other acidic foods that lacked the critical component—Vitamin C. This demonstrates the importance of understanding complete causal mechanisms, not just correlations.
:::

### DAG 2: The Misguided Belief (Wrong Understanding)

**Historical Context:** Over time, people came to believe it was the acid in lemons that killed bacteria which was causing scurvy. This led to lemons being replaced by limes (cheaper but less Vitamin C) or just using acids like vinegar, causing scurvy to return.

**Your Task:** Recreate this DAG showing the incorrect understanding of the data generating process.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/8aaffd0a3c967d0a26f506232f998130847be3e8/images/scurvy.png)

```{python}
#| label: dag-2-misguided
#| echo: false



import daft
import matplotlib.pyplot as plt

# Create a PGM object
pgm = daft.PGM(dpi=150, alternate_style="outer")

# Example of a professionally styled node
pgm.add_node("Acid", "Acid\nIntake" + r" $(X)$", 1.5, 3.75, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'orange', 
                 'edgecolor': '#ff6600', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("Bacteria_in_food", "Bacteria in Food\n"+r" $(Y)$", 2.5, 2.5, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'lightcoral', 
                 'edgecolor': 'darkred', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("Scurvy", "Get Scruvy\n"+r" $(Z)$", 3.5, 1.25, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'thistle', 
                 'edgecolor': 'purple', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })             
pgm.add_edge("Acid", "Bacteria_in_food")
pgm.add_edge("Bacteria_in_food", "Scurvy")

pgm.render()

```

::: {.callout-note}
## Analysis of DAG 2 (Misguided Belief)

This DAG represents the unfortunate misunderstanding that emerged when people lost sight of Lind's original findings. The three-node structure (**Acid** → **Bacteria in Food** → **Get Scurvy**) introduced an intermediate causal step—the belief that acid killed harmful bacteria in food. While this model attempted to explain the mechanism that DAG 1 lacked, it proposed the *wrong* mechanism. This error proved disastrous: people began using limes (cheaper but with less Vitamin C) or vinegar (acidic but no Vitamin C), leading to scurvy's return after it had been largely eliminated. This DAG demonstrates how a mechanistic explanation can be more harmful than no explanation at all when that mechanism is incorrect—a cautionary tale about verifying causal assumptions before applying them in practice.
:::

### DAG 3: The 1928 Understanding (Complete and Correct)

**Historical Context:** In 1928, the true mechanism was discovered - it was Vitamin C (ascorbic acid) that prevented scurvy. This complete understanding finally explained why lemons worked and why the acid theory was wrong.

**Your Task:** Recreate this DAG showing the complete and correct understanding of the scurvy data generating process.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/main/images/scurvy3.png)

```{python}
#| label: dag-3-1928
#| echo: false


import daft
import matplotlib.pyplot as plt

# Create a PGM object
pgm = daft.PGM(dpi=150, alternate_style="outer")

# Example of a professionally styled node
pgm.add_node("Vitamin_C", "Vitamin C\nIntake" + r" $(X)$", 1.5, 3.5, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'palegoldenrod', 
                 'edgecolor': '#daa520', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("Collagen_Synthesis", "Collagen Synthesis\n"+r" $(Y)$", 2.5, 2.25, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'lightblue', 
                 'edgecolor': 'darkblue', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("Scurvy", "No Scruvy\n"+r" $(Z)$", 3.5, 1, aspect = 3, scale = 1.5,
             plot_params={
                 'facecolor': 'plum', 
                 'edgecolor': 'purple', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })             
pgm.add_edge("Vitamin_C", "Collagen_Synthesis")
pgm.add_edge("Collagen_Synthesis", "Scurvy")

pgm.render()

```

::: {.callout-note}
## Analysis of DAG 3 (1928 Understanding - Complete and Correct)

This DAG represents the complete and accurate understanding achieved in 1928. The three-node structure (**Vitamin C** → **Collagen Synthesis** → **No Scurvy**) correctly identifies both the causal agent (Vitamin C) and the biological mechanism (collagen synthesis). This model synthesizes the insights of the previous two DAGs: it provides the mechanistic depth that DAG 1 lacked while correcting the flawed mechanism proposed in DAG 2. It explains why lemons worked (high Vitamin C content) and why other acidic foods didn't (they lacked Vitamin C). This complete causal story enabled proper scurvy prevention that could be reliably applied and maintained. The 1928 DAG demonstrates the power of understanding complete causal mechanisms—it's both practically effective and scientifically rigorous, serving as a model for how to build robust causal models that stand the test of time.
:::

<!-- ## Student Requirements Section: Mastering DAFT Visualization {#student-analysis-section}

**Your Task:** Demonstrate your mastery of DAFT through comprehensive recreation of the three scurvy DAGs and thoughtful analysis. The bulk of your grade comes from successfully recreating the DAGs and answering the discussion questions.

::: {.callout-important}
## 📊 Challenge Requirements

**Complete all DAG recreation sections:**

1. **DAG 1 (1747):** Lemons prevent scurvy - correct but incomplete
2. **DAG 2 (Misguided):** Acid kills bacteria - wrong understanding  
3. **DAG 3 (1928):** Vitamin C prevents scurvy - complete and correct
4. **Optional:** Add a little professional styling to the DAGs to make them more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely).
:::

### Professional Quality Standards

**Your DAGs should:**

- (90% grade): Accurately recreate the reference images
- (100% grade): Add professional colors and possibly play with shapes to make it more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely). Erase everything but the story of scurvy and the three DAGs
- Include clear, readable labels
- Demonstrate understanding of DAFT customization options
- Be suitable for a business or academic audience

### Example: Professional DAFT Node Styling

Here's an example (see @fig-example-node) of how to create a professionally styled node in DAFT with nice captions and references to the figure: 

```{python}
#| label: fig-example-node
#| echo: false
#| fig-cap: "Example: Professional DAFT Node Styling"

import daft
import matplotlib.pyplot as plt

# Create a PGM object
pgm = daft.PGM(dpi=150, alternate_style="outer")

# Example of a professionally styled node
pgm.add_node("vitamin_c", "Vitamin C\nIntake" + r" $(X)$", 1, 1, aspect = 3, scale = 1.1,
             plot_params={
                 'facecolor': 'lightgreen', 
                 'edgecolor': 'darkgreen', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("health", "Healthiness\n"+r" $(Y)$", 3.25, 1, aspect = 3, scale = 1.1,
             plot_params={
                 'facecolor': 'thistle', 
                 'edgecolor': 'purple', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_edge("vitamin_c", "health")

pgm.render()
```

**Key Styling Parameters:**

- `facecolor`: Background color of the node
- `edgecolor`: Border color of the node  
- `linewidth`: Thickness of the border
- `alpha`: Transparency (0.0 to 1.0)
- `fontsize`: Size of text inside the node
- `aspect`: Width/height aspect ratio of the node (default: 1.0)
- `scale`: Height of the node (default: 1.0)

## Getting Started: Repository Setup 🚀

::: {.callout-important}
## 📁 Getting Started

**Step 1:** Create a new repository in your GitHub account named "daftChallenge" (forked from [https://github.com/flyaflya/daftChallenge](https://github.com/flyaflya/daftChallenge))

**Step 2:** Clone your repository locally using Cursor (or VS Code)

**Step 3:** Be sure to install DAFT in your environment: `pip install 'daft-pgm'`.

**Step 4:** Modify your local copy of this `index.qmd` file  to complete the challenge and get it to be a github pages website.
:::

### Getting Started Tips

## Key DAFT Resources

**Essential DAFT Documentation:**

- [DAFT Documentation](https://docs.daft-pgm.org/en/latest/)
- [DAFT Examples](https://docs.daft-pgm.org/en/latest/examples/)
- [Matplotlib Colors](https://matplotlib.org/stable/gallery/color/named_colors.html)

**Key DAFT Parameters to Explore:**

- `plot_params`: Dictionary of matplotlib parameters for styling
- `aspect`: Controls node width (default: 1.0)
- `scale`: Controls node size (default: 1.0)
- `fontsize`: Text size in the node
- `alternate`: Use alternative node shape (True/False)

## Grading Rubric 🎓

**90% Grade:** Successfully recreate all 3 DAGs with good visual quality.

**100% Grade:** Recreate all 3 DAGs with enhanced quality and visual aesthetics (example: use nice fill colors and/or enclose the text in the ellipse completely).

## Submission Checklist ✅

**Minimum Requirements (Required for Any Points):**

- [ ] Created repository named "daftChallenge" in your GitHub account (forked from [https://github.com/flyaflya/daftChallenge](https://github.com/flyaflya/daftChallenge))
- [ ] Cloned repository locally using Cursor (or VS Code)
- [ ] Installed DAFT package successfully
- [ ] Document rendered to HTML successfully
- [ ] HTML files uploaded to your repository
- [ ] GitHub Pages enabled and working
- [ ] Site accessible at `https://[your-username].github.io/daftChallenge/`

**90% Grade Requirements:**

- [ ] Successfully recreate all 3 DAGs
- [ ] Good visual quality with appropriate styling

**100% Grade Requirements:**

- [ ] All DAG recreations completed with professional quality
- [ ] Erase everything but the story of scurvy and the three DAGs (make it a nice concise narrative about scurvy)

-->

